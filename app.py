# app.py
import streamlit as st

# Importe os m√≥dulos que voc√™ criou
from style import aplicar_estilo_personalizado
import sim_capacidade
import sim_prazos

# Configura√ß√£o da p√°gina (sem altera√ß√µes)
st.set_page_config(
    page_title="Simulador do Laborat√≥rio",
    layout="wide",
    page_icon="assets/CHMMS_icone-34.png",
    initial_sidebar_state="expanded",
    menu_items={'About': "Simulador de cen√°rios para o Laborat√≥rio Central."}
)

# Aplica nosso estilo CSS
aplicar_estilo_personalizado()

# =========================================================================
#             INICIALIZA√á√ÉO E CONTROLE DE ESTADO (A NOVA L√ìGICA)
# =========================================================================

# 1. Inicializamos o 'session_state' para lembrar a escolha do usu√°rio.
#    Se 'tipo_simulacao' n√£o existir na mem√≥ria, ele √© criado com o valor None.
st.session_state.setdefault('tipo_simulacao', None)

# 2. Fun√ß√µes de Callback para os bot√µes.
#    Essas fun√ß√µes alteram o estado da aplica√ß√£o.
def set_simulacao(tipo):
    """Salva o tipo de simula√ß√£o escolhido no estado da sess√£o."""
    st.session_state.tipo_simulacao = tipo

def go_home():
    """Limpa o estado da sess√£o para voltar ao menu principal."""
    st.session_state.tipo_simulacao = None

# =========================================================================
#                        INTERFACE (UI)
# =========================================================================

# --- Barra Lateral (Sidebar) ---
# A sidebar agora √© mais simples. O bot√£o de voltar s√≥ aparece se j√°
# estivermos dentro de uma simula√ß√£o.
with st.sidebar:
    try:
        st.image("assets/CHMMS_logo_reduzida-16.png", width=180)
    except Exception as e:
        st.warning("Arquivos de imagem n√£o encontrados.")
    
    # Adiciona o bot√£o "Voltar" se uma simula√ß√£o j√° foi escolhida
    if st.session_state.tipo_simulacao is not None:
        st.button("‚Ü©Ô∏è Voltar ao Menu", on_click=go_home, use_container_width=True)


# --- P√°gina Principal ---
# 3. L√≥gica de renderiza√ß√£o: ou mostra o menu, ou a simula√ß√£o.
if st.session_state.tipo_simulacao is None:
    # --- ESTADO INICIAL: MOSTRA O MENU PRINCIPAL ---
    st.title("Simulador de Cen√°rios do Laborat√≥rio Central")
    st.markdown("### Selecione o tipo de simula√ß√£o que deseja executar:")
    
    st.markdown("<br>", unsafe_allow_html=True) # Espa√ßo
    
    col1, col2, col3 = st.columns([1, 0.1, 1]) # Coluna do meio para espa√ßamento

    with col1:
        st.button(
            "üìà Simular Capacidade",
            on_click=set_simulacao,
            args=('Capacidade',), # Argumento para a fun√ß√£o set_simulacao
            use_container_width=True,
            type="primary"
        )
        st.info("Otimize a quantidade de recursos (prensas, bancadas, etc.) para atender a uma demanda dentro de um prazo espec√≠fico.")

    with col3:
        st.button(
            "üóìÔ∏è Simular Prazos",
            on_click=set_simulacao,
            args=('Prazos',),
            use_container_width=True
        )
        st.info("Estime o prazo de conclus√£o de uma carteira de ensaios com a configura√ß√£o de recursos atual.")

else:
    # --- ESTADO SECUND√ÅRIO: MOSTRA A SIMULA√á√ÉO ESCOLHIDA ---
    if st.session_state.tipo_simulacao == 'Capacidade':
        sim_capacidade.render()
    elif st.session_state.tipo_simulacao == 'Prazos':
        sim_prazos.render()